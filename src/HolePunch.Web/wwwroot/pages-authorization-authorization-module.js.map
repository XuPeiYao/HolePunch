{"version":3,"sources":["./src/app/pages/authorization/authorization-routing.module.ts","./src/app/pages/authorization/components/login/login.component.ts","./src/app/pages/authorization/components/login/login.component.html","./src/app/pages/authorization/authorization.module.ts","./src/app/pages/authorization/guards/can-login.guard.ts"],"names":[],"mappings":"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","file":"pages-authorization-authorization-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { CanLoginGuard } from './guards/can-login.guard';\r\n\r\nconst routes: Routes = [{\r\n  path:'',\r\n  component: LoginComponent,\r\n  canActivate: [CanLoginGuard]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthorizationRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\nimport { UserService } from 'src/sdk';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  validateForm!: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private _userService: UserService,\r\n    private _message: NzMessageService,\r\n    private _modal: NzModalService,\r\n    private _router:Router) {}\r\n\r\n  submitForm(): void {\r\n    for (const i in this.validateForm.controls) {\r\n      this.validateForm.controls[i].markAsDirty();\r\n      this.validateForm.controls[i].updateValueAndValidity();\r\n    }\r\n\r\n    if(this.validateForm.invalid){\r\n      return;\r\n    }\r\n\r\n    const id = this._message.loading('Login...', { nzDuration: 0 }).messageId;\r\n    this._userService.login({ account: this.validateForm.value.account, password:  this.validateForm.value.password})\r\n      .subscribe(token=>{\r\n        this._message.remove(id);\r\n        if(token){\r\n          sessionStorage.setItem('token',token);\r\n          this._router.navigateByUrl('/connect');\r\n        }else{\r\n          this._modal.error({\r\n            nzTitle: 'Authorization Failed',\r\n            nzContent: 'Account or Password incorrect.'\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.validateForm = this.fb.group({\r\n      account: [null, [Validators.required]],\r\n      password: [null, [Validators.required]],\r\n      remember: [true]\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"background\">\r\n  <form nz-form [formGroup]=\"validateForm\" class=\"login-form\" (ngSubmit)=\"submitForm()\">\r\n    <p style=\"text-align: center\"><img src=\"/assets/logo.png\" width=\"100px\"></p>\r\n    <nz-form-item>\r\n      <nz-form-control nzErrorTip=\"Please input your account!\">\r\n        <nz-input-group nzPrefixIcon=\"user\">\r\n          <input type=\"text\" nz-input formControlName=\"account\" placeholder=\"Account\" />\r\n        </nz-input-group>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-control nzErrorTip=\"Please input your password!\">\r\n        <nz-input-group nzPrefixIcon=\"lock\">\r\n          <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" />\r\n        </nz-input-group>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <button nz-button class=\"login-form-button login-form-margin\" [nzType]=\"'primary'\">Log in</button>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthorizationRoutingModule } from './authorization-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { NzFormModule } from 'ng-zorro-antd/form';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzMessageModule } from 'ng-zorro-antd/message';\r\nimport { NzModalModule } from 'ng-zorro-antd/modal';\r\nimport { SdkModule } from 'src/sdk';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AuthorizationRoutingModule,\r\n    FormsModule,\r\n    NzFormModule,\r\n    ReactiveFormsModule,\r\n    NzInputModule,\r\n    NzIconModule,\r\n    NzButtonModule,\r\n    NzMessageModule,\r\n    NzModalModule,\r\n    SdkModule\r\n  ]\r\n})\r\nexport class AuthorizationModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanLoginGuard implements CanActivate {\r\n  constructor(private _router:Router){}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if(sessionStorage.getItem('token')){\r\n      this._router.navigateByUrl('/');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}