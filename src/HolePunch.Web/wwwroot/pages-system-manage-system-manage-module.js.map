{"version":3,"sources":["./src/app/pages/dashboard/pages/system-manage/components/user-manage/user-manage.component.ts","./src/app/pages/dashboard/pages/system-manage/components/user-manage/user-manage.component.html","./src/app/pages/dashboard/pages/system-manage/components/user-group-manage/user-group-manage.component.ts","./src/app/pages/dashboard/pages/system-manage/components/user-group-manage/user-group-manage.component.html","./src/app/pages/dashboard/pages/system-manage/system-manage-routing.module.ts","./src/app/pages/dashboard/pages/system-manage/system-manage.module.ts","./src/app/pages/dashboard/pages/system-manage/components/connection-status/connection-status.component.html","./src/app/pages/dashboard/pages/system-manage/components/connection-status/connection-status.component.ts"],"names":[],"mappings":"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","file":"pages-system-manage-system-manage-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { User, UserService,UserGroup } from 'src/sdk';\nimport { map, pluck, take, mapTo, tap,mergeMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-manage',\n  templateUrl: './user-manage.component.html',\n  styleUrls: ['./user-manage.component.scss']\n})\nexport class UserManageComponent implements OnInit {\n  showChangePassword = false;\n  passwordVisible=false;\n  newPassword = '';\n  changePasswordTargetUser:any=null;\n\n  loading=false;\n\n  showNewUser= false;\n  showEditUser= false;\n  createUserValidateForm!: FormGroup;\n  editUserValidateForm!: FormGroup;\n\n\n\n\n  users: User[]=[];\n  userGroups:UserGroup[]=[];\n  selectedUserGroups:number[]=[];\n\n  confirmationValidator = (control: FormControl): { [s: string]: boolean } => {\n    if (!control.value) {\n      return { required: true };\n    } else if (control.value !== this.createUserValidateForm.controls.password.value) {\n      return { confirm: true, error: true };\n    }\n    return {};\n  };\n  constructor(\n    private _userService: UserService,\n    private _modal: NzModalService,\n    private _message: NzMessageService,\n    private fb: FormBuilder) {\n\n  }\n\n  ngOnInit(): void {\n    this.loadUsers();\n    this.loadGroups();\n    this.createUserValidateForm = this.fb.group({\n      account: [null, [Validators.required]],\n      password: [null, [Validators.required]],\n      checkPassword: [null, [Validators.required, this.confirmationValidator]],\n      name: [null, [Validators.required]],\n      enabled: [false]\n    });\n    this.editUserValidateForm = this.fb.group({\n      id: [null, [Validators.required]],\n      account: [null, [Validators.required]],\n      name: [null, [Validators.required]],\n      enabled: [null],\n      groups: [null],\n      currentIP:[null]\n    });\n  }\n\n  loadUsers(){\n    this.loading=true;\n    this._userService.listUser().subscribe(users=>{\n      this.users = users;\n      this.loading = false;\n    });\n  }\n  loadGroups(){\n    this._userService.listUserGroup().subscribe(groups=>{\n      this.userGroups = groups;\n    });\n  }\n\n  createUser(){\n    for (const i in this.createUserValidateForm.controls) {\n      this.createUserValidateForm.controls[i].markAsDirty();\n      this.createUserValidateForm.controls[i].updateValueAndValidity();\n    }\n\n    if(this.createUserValidateForm.invalid){\n      return;\n    }\n\n    const id = this._message.loading('Creating User...', { nzDuration: 0 }).messageId;\n    var createdUser:any=null;\n    this._userService.createUser(this.createUserValidateForm.value)\n      .pipe(mergeMap((newUser:User)=>{\n        createdUser = newUser;\n        return this._userService.changePassword(<number>newUser.id , {password: this.createUserValidateForm.value.password})\n      }))\n      .pipe(mergeMap(()=>this._userService.updateWhereUserGroup(createdUser.id, this.selectedUserGroups)))\n      .subscribe(()=>{\n        this._message.remove(id);\n        this.loadUsers();\n        this.showNewUser = false;\n        this.createUserValidateForm.reset();\n        this.selectedUserGroups = [];\n        this._message.success('User Created');\n      });\n  }\n\n  updateConfirmValidator(): void {\n    /** wait for refresh value */\n    Promise.resolve().then(() => this.createUserValidateForm.controls.checkPassword.updateValueAndValidity());\n  }\n\n\n\n  selectUserToEdit(user:User){\n    this.editUserValidateForm.setValue(user);\n    this.editUserValidateForm.get('account')?.disable();\n    this.selectedUserGroups = user.groups?.map(x=><number>x.id) || [];\n  }\n\n  editUser(){\n    for (const i in this.editUserValidateForm.controls) {\n      this.editUserValidateForm.controls[i].markAsDirty();\n      this.editUserValidateForm.controls[i].updateValueAndValidity();\n    }\n\n    if(this.editUserValidateForm.invalid){\n      return;\n    }\n\n    const id = this._message.loading('Updating User...', { nzDuration: 0 }).messageId;\n    this.editUserValidateForm.get('account')?.enable();\n\n    this._userService.updateUser(this.editUserValidateForm.value)\n      .pipe(mergeMap(()=>this._userService.updateWhereUserGroup(this.editUserValidateForm.value.id, this.selectedUserGroups)))\n      .subscribe(()=>{\n      this.loadUsers();\n      this.showEditUser = false;\n      this.editUserValidateForm.reset();\n      this.selectedUserGroups=[];\n      this._message.remove(id);\n      this._message.create('success', `Updated User`);\n    })\n  }\n\n\n  changeUserPassword(){\n    if(!this.changePasswordTargetUser)return;\n    const id = this._message.loading('Changing Psassword...', { nzDuration: 0 }).messageId;\n      this._userService.changePassword(this.changePasswordTargetUser.id,{password: this.newPassword}).subscribe(()=>{\n        this._message.remove(id);\n        this._message.create('success', `Changed Password`);\n        this.newPassword = '';\n        this.showChangePassword = false;\n    });\n  }\n\n  deleteUser(user:User){\n    this._modal.confirm({\n      nzTitle: `Do you Want to delete this user (${user.name})?`,\n      nzContent: 'When clicked the OK button, this user will be deleted.',\n      nzOnOk: () =>{\n        const id = this._message.loading('Deleting User...', { nzDuration: 0 }).messageId;\n        this._userService.deleteUser(<number>user.id).subscribe(()=>{\n          this.loadUsers();\n          this._message.remove(id);\n          this._message.success('User Deleted');\n        });\n      }\n    });\n  }\n\n}\n","<div style=\"margin-bottom: 8px;\"><button nz-button (click)=\"showNewUser = true\">Add User</button></div>\n<nz-list nzItemLayout=\"horizontal\" [nzLoading]=\"loading\">\n  <nz-list-item *ngFor=\"let user of users\">\n    <nz-list-item-meta\n      [nzDescription]=\"user.account\"\n    >\n      <nz-list-item-meta-title>\n        {{ user.name }}\n      </nz-list-item-meta-title>\n\n    </nz-list-item-meta>\n    <ul nz-list-item-actions>\n      <nz-list-item-action><a (click)=\"selectUserToEdit(user);showEditUser = true\">Edit</a></nz-list-item-action>\n      <nz-list-item-action><a (click)=\"changePasswordTargetUser = user;showChangePassword=true\">Change Password</a></nz-list-item-action>\n      <nz-list-item-action><a (click)=\"deleteUser(user)\">Delete</a></nz-list-item-action>\n    </ul>\n  </nz-list-item>\n  <nz-list-empty *ngIf=\"users.length === 0\"></nz-list-empty>\n</nz-list>\n\n<nz-modal [(nzVisible)]=\"showChangePassword\" nzTitle=\"Change Password\" (nzOnCancel)=\"showChangePassword=false\" (nzOnOk)=\"changeUserPassword()\">\n  <ng-container *nzModalContent>\n    User Account: {{changePasswordTargetUser.account}}\n    <nz-input-group [nzSuffix]=\"suffixTemplate\">\n      <input [type]=\"passwordVisible ? 'text' : 'password'\" nz-input placeholder=\"input password\" [(ngModel)]=\"newPassword\" />\n    </nz-input-group>\n    <ng-template #suffixTemplate>\n      <i nz-icon [nzType]=\"passwordVisible ? 'eye-invisible' : 'eye'\" (click)=\"passwordVisible = !passwordVisible\"></i>\n    </ng-template>\n  </ng-container>\n</nz-modal>\n\n<nz-modal [(nzVisible)]=\"showNewUser\" nzTitle=\"Add User\" (nzOnCancel)=\"showNewUser=false;createUserValidateForm.reset();selectedUserGroups=[]\" (nzOnOk)=\"createUser()\">\n  <ng-container *nzModalContent>\n    <form nz-form [formGroup]=\"createUserValidateForm\" class=\"login-form\" (ngSubmit)=\"createUser()\">\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzRequired nzFor=\"account\">Account</nz-form-label>\n        <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" nzErrorTip=\"The input is not valid account!\">\n          <input nz-input formControlName=\"account\" id=\"account\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"password\" nzRequired>Password</nz-form-label>\n        <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" nzErrorTip=\"Please input password!\">\n          <input nz-input type=\"password\" id=\"password\" formControlName=\"password\" (ngModelChange)=\"updateConfirmValidator()\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"checkPassword\" nzRequired>Confirm Password</nz-form-label>\n        <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" [nzErrorTip]=\"errorTpl\">\n          <input nz-input type=\"password\" formControlName=\"checkPassword\" id=\"checkPassword\" />\n          <ng-template #errorTpl let-control>\n            <ng-container *ngIf=\"control.hasError('required')\">\n              Please confirm password!\n            </ng-container>\n            <ng-container *ngIf=\"control.hasError('confirm')\">\n              Two passwords that you enter is inconsistent!\n            </ng-container>\n          </ng-template>\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"name\" nzRequired nzTooltipTitle=\"What do you want other to call this account\">\n          <span>Name</span>\n        </nz-form-label>\n        <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" nzErrorTip=\"Please input name!\">\n          <input nz-input id=\"name\" formControlName=\"name\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"groups\" nzRequired nzTooltipTitle=\"User ACL groups\">\n          <span>Groups</span>\n        </nz-form-label>\n        <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" nzErrorTip=\"Please select user groups!\">\n          <nz-select\n            nzMode=\"multiple\"\n            nzPlaceHolder=\"Please select\"\n            [(ngModel)]=\"selectedUserGroups\"\n            [ngModelOptions]=\"{standalone: true}\">\n            <nz-option *ngFor=\"let group of userGroups\" [nzLabel]=\"group.name || 'No Name'\" [nzValue]=\"group.id\"></nz-option>\n         </nz-select>\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item nz-row class=\"register-area\">\n        <nz-form-control [nzSpan]=\"14\" [nzOffset]=\"6\">\n          <label nz-checkbox formControlName=\"enabled\">\n            <span>\n              Enabled\n            </span>\n          </label>\n        </nz-form-control>\n      </nz-form-item>\n    </form>\n  </ng-container>\n</nz-modal>\n\n<nz-modal [(nzVisible)]=\"showEditUser\" nzTitle=\"Edit User\" (nzOnCancel)=\"showEditUser=false;editUserValidateForm.reset();selectedUserGroups=[]\" (nzOnOk)=\"editUser()\">\n  <ng-container *nzModalContent>\n    <form nz-form [formGroup]=\"editUserValidateForm\" class=\"login-form\" (ngSubmit)=\"editUser()\">\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzRequired nzFor=\"account\">Account</nz-form-label>\n        <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" nzErrorTip=\"The input is not valid account!\">\n          <input  nz-input formControlName=\"account\" id=\"account\"  />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"name\" nzRequired nzTooltipTitle=\"What do you want other to call this account\">\n          <span>Name</span>\n        </nz-form-label>\n        <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" nzErrorTip=\"Please input name!\">\n          <input nz-input id=\"name\" formControlName=\"name\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"groups\" nzRequired nzTooltipTitle=\"User ACL groups\">\n          <span>Groups</span>\n        </nz-form-label>\n        <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" nzErrorTip=\"Please select user groups!\">\n          <nz-select\n            nzMode=\"multiple\"\n            nzPlaceHolder=\"Please select\"\n            [(ngModel)]=\"selectedUserGroups\"\n            [ngModelOptions]=\"{standalone: true}\">\n            <nz-option *ngFor=\"let group of userGroups\" [nzLabel]=\"group.name || 'No Name'\" [nzValue]=\"group.id\"></nz-option>\n         </nz-select>\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item nz-row class=\"register-area\">\n        <nz-form-control [nzSpan]=\"14\" [nzOffset]=\"6\">\n          <label nz-checkbox formControlName=\"enabled\">\n            <span>\n              Enabled\n            </span>\n          </label>\n        </nz-form-control>\n      </nz-form-item>\n    </form>\n  </ng-container>\n</nz-modal>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { User, UserService,UserGroup } from 'src/sdk';\nimport { map, pluck, take, mapTo, tap,mergeMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-group-manage',\n  templateUrl: './user-group-manage.component.html',\n  styleUrls: ['./user-group-manage.component.scss']\n})\nexport class UserGroupManageComponent implements OnInit {\n    loading=false;\n\n  showNewUserGroup= false;\n  showEditUserGroup= false;\n  createUserGroupValidateForm!: FormGroup;\n  editUserGroupValidateForm!: FormGroup;\n\n  userGroups:UserGroup[]=[];\n\n  confirmationValidator = (control: FormControl): { [s: string]: boolean } => {\n    if (!control.value) {\n      return { required: true };\n    } else if (control.value !== this.createUserGroupValidateForm.controls.password.value) {\n      return { confirm: true, error: true };\n    }\n    return {};\n  };\n  constructor(\n    private _userService: UserService,\n    private _modal: NzModalService,\n    private _message: NzMessageService,\n    private fb: FormBuilder) {\n\n  }\n\n  ngOnInit(): void {\n    this.loadGroups();\n    this.createUserGroupValidateForm = this.fb.group({\n      name: [null, [Validators.required]],\n      isAdmin: [false]\n    });\n    this.editUserGroupValidateForm = this.fb.group({\n      id: [null, [Validators.required]],\n      name: [null, [Validators.required]],\n      isAdmin: [false]\n    });\n  }\n\n  loadGroups(){\n    this.loading=true;\n    this._userService.listUserGroup().subscribe(groups=>{\n      this.userGroups = groups;\n      this.loading = false;\n\n    });\n  }\n\n  createUserGroup(){\n    for (const i in this.createUserGroupValidateForm.controls) {\n      this.createUserGroupValidateForm.controls[i].markAsDirty();\n      this.createUserGroupValidateForm.controls[i].updateValueAndValidity();\n    }\n\n    if(this.createUserGroupValidateForm.invalid){\n      return;\n    }\n\n    const id = this._message.loading('Creating User Group...', { nzDuration: 0 }).messageId;\n\n    this._userService.createUserGroup(this.createUserGroupValidateForm.value)\n      .subscribe(()=>{\n        this._message.remove(id);\n        this.loadGroups();\n        this.showNewUserGroup = false;\n        this.createUserGroupValidateForm.reset();\n        this._message.success('User Group Created');\n      });\n  }\n\n\n\n\n  selectUserGroupToEdit(userGroup:UserGroup){\n    this.editUserGroupValidateForm.setValue(userGroup);\n  }\n\n  editUserGroup(){\n    for (const i in this.editUserGroupValidateForm.controls) {\n      this.editUserGroupValidateForm.controls[i].markAsDirty();\n      this.editUserGroupValidateForm.controls[i].updateValueAndValidity();\n    }\n\n    if(this.editUserGroupValidateForm.invalid){\n      return;\n    }\n\n    const id = this._message.loading('Updating User Group...', { nzDuration: 0 }).messageId;\n\n    this._userService.updateUserGroup(this.editUserGroupValidateForm.value)\n      .subscribe(()=>{\n      this.loadGroups();\n      this.showEditUserGroup = false;\n      this.editUserGroupValidateForm.reset();\n      this._message.remove(id);\n      this._message.create('success', `Updated User Group`);\n    })\n  }\n\n\n  deleteUserGroup(userGroup:UserGroup){\n    this._modal.confirm({\n      nzTitle: `Do you Want to delete this user group (${userGroup.name})?`,\n      nzContent: 'When clicked the OK button, this user group will be deleted.',\n      nzOnOk: () =>{\n        const id = this._message.loading('Deleting User Group...', { nzDuration: 0 }).messageId;\n        this._userService.deleteUserGroup(<number>userGroup.id).subscribe(()=>{\n          this.loadGroups();\n          this._message.remove(id);\n          this._message.success('User Group Deleted');\n        });\n      }\n    });\n  }\n\n}\n","<div style=\"margin-bottom: 8px;\"><button nz-button (click)=\"showNewUserGroup = true\">Add User Group</button></div>\n<nz-list nzItemLayout=\"horizontal\" [nzLoading]=\"loading\">\n  <nz-list-item *ngFor=\"let group of userGroups\">\n    <nz-list-item-meta>\n      <nz-list-item-meta-title>\n        {{ group.name }}\n      </nz-list-item-meta-title>\n\n    </nz-list-item-meta>\n    <ul nz-list-item-actions>\n      <nz-list-item-action><a (click)=\"selectUserGroupToEdit(group);showEditUserGroup = true\">Edit</a></nz-list-item-action>\n      <nz-list-item-action><a (click)=\"deleteUserGroup(group)\">Delete</a></nz-list-item-action>\n    </ul>\n  </nz-list-item>\n  <nz-list-empty *ngIf=\"userGroups.length === 0\"></nz-list-empty>\n</nz-list>\n\n<nz-modal [(nzVisible)]=\"showNewUserGroup\" nzTitle=\"Add User\" (nzOnCancel)=\"showNewUserGroup=false;createUserGroupValidateForm.reset();\" (nzOnOk)=\"createUserGroup()\">\n  <ng-container *nzModalContent>\n    <form nz-form [formGroup]=\"createUserGroupValidateForm\" class=\"login-form\" (ngSubmit)=\"createUserGroup()\">\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"name\" nzRequired nzTooltipTitle=\"What do you want other to call this group\">\n          <span>Name</span>\n        </nz-form-label>\n        <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" nzErrorTip=\"Please input name!\">\n          <input nz-input id=\"name\" formControlName=\"name\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item nz-row class=\"register-area\">\n        <nz-form-control [nzSpan]=\"14\" [nzOffset]=\"6\">\n          <label nz-checkbox formControlName=\"isAdmin\">\n            <span>\n              Is Administrator Group\n            </span>\n          </label>\n        </nz-form-control>\n      </nz-form-item>\n    </form>\n  </ng-container>\n</nz-modal>\n\n<nz-modal [(nzVisible)]=\"showEditUserGroup\" nzTitle=\"Edit User Group\" (nzOnCancel)=\"showEditUserGroup=false;editUserGroupValidateForm.reset();\" (nzOnOk)=\"editUserGroup()\">\n  <ng-container *nzModalContent>\n    <form nz-form [formGroup]=\"editUserGroupValidateForm\" class=\"login-form\" (ngSubmit)=\"editUserGroup()\">\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"name\" nzRequired nzTooltipTitle=\"What do you want other to call this account\">\n          <span>Name</span>\n        </nz-form-label>\n        <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" nzErrorTip=\"Please input name!\">\n          <input nz-input id=\"name\" formControlName=\"name\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item nz-row class=\"register-area\">\n        <nz-form-control [nzSpan]=\"14\" [nzOffset]=\"6\">\n          <label nz-checkbox formControlName=\"isAdmin\">\n            <span>\n              Is Administrator Group\n            </span>\n          </label>\n        </nz-form-control>\n      </nz-form-item>\n    </form>\n  </ng-container>\n</nz-modal>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ConnectionStatusComponent } from './components/connection-status/connection-status.component';\nimport { UserGroupManageComponent } from './components/user-group-manage/user-group-manage.component';\nimport { UserManageComponent } from './components/user-manage/user-manage.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    redirectTo: 'connStatus'\n  },\n  {\n    path:'connStatus',\n    component: ConnectionStatusComponent\n  },\n  {\n    path: 'user',\n    component: UserManageComponent\n  },\n  {\n    path: 'user-group',\n    component: UserGroupManageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SystemManageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SystemManageRoutingModule } from './system-manage-routing.module';\nimport { ConnectionStatusComponent } from './components/connection-status/connection-status.component';\nimport { SdkModule } from 'src/sdk';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { JwtHttpInterceptorService } from 'src/app/services/jwt-http-interceptor.service';\nimport { NzListModule } from 'ng-zorro-antd/list';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { UserManageComponent } from './components/user-manage/user-manage.component';\nimport { UserGroupManageComponent } from './components/user-group-manage/user-group-manage.component';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzMessageModule } from 'ng-zorro-antd/message';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\n@NgModule({\n  declarations: [ConnectionStatusComponent, UserManageComponent, UserGroupManageComponent],\n  imports: [\n    CommonModule,\n    SystemManageRoutingModule,\n    SdkModule,\n    NzListModule,\n    NzButtonModule,\n    NzModalModule,\n    NzMessageModule,\n    FormsModule,\n    NzFormModule,\n    ReactiveFormsModule,\n    NzInputModule,\n    NzIconModule,\n    NzSelectModule,\n    NzCheckboxModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: JwtHttpInterceptorService,\n    multi: true\n  }]\n})\nexport class SystemManageModule { }\n","<div style=\"margin-bottom: 8px;\"><button nz-button (click)=\"loadConnections()\">Reflash List</button></div>\n<nz-list nzItemLayout=\"horizontal\" [nzLoading]=\"loading\">\n  <nz-list-item *ngFor=\"let connection of connections\">\n    <nz-list-item-meta\n      [nzDescription]=\"getDiscription(connection)\"\n    >\n      <nz-list-item-meta-title>\n        {{ connection.serviceName }}\n      </nz-list-item-meta-title>\n\n    </nz-list-item-meta>\n    <!-- <ul nz-list-item-actions>\n      <nz-list-item-action><a (click)=\"disconnect(connection.sessionId)\">Disconnect</a></nz-list-item-action>\n    </ul> -->\n  </nz-list-item>\n  <nz-list-empty *ngIf=\"connections.length === 0\"></nz-list-empty>\n</nz-list>\n","import { ConnectionInfo } from './../../../../../../../sdk/models/ConnectionInfo';\nimport { Component, OnInit } from '@angular/core';\nimport { ServiceService } from 'src/sdk';\n\n@Component({\n  selector: 'app-connection-status',\n  templateUrl: './connection-status.component.html',\n  styleUrls: ['./connection-status.component.scss']\n})\nexport class ConnectionStatusComponent implements OnInit {\n  loading=false;\n  connections: ConnectionInfo[]=[];\n\n  constructor(private _serviceService:ServiceService) { }\n\n  ngOnInit(): void {\n    this.loadConnections();\n  }\n\n  loadConnections(){\n    this.loading = true;\n    this._serviceService.listConnections().subscribe(conns=>{\n      this.connections=conns;\n      this.loading = false;\n    })\n  }\n\n  disconnect(sessionId:string | undefined){\n\n  }\n\n  getDiscription(conn: ConnectionInfo){\n    return `From: ${conn.sourceEndPoint}; To: ${conn.targetEndPoint}`;\n  }\n}\n"],"sourceRoot":"webpack:///"}